import org.tmatesoft.svn.core.wc.*

apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 23
        versionCode 1
        versionName "1.6.${getSvnRevision()}"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

}

task makeJarDebug(type: Copy) {
    file('build/outputs/target/').deleteDir()
    from('build/intermediates/bundles/debug/')
    into('build/outputs/target/')
    include('classes.jar')
    rename('classes.jar', 'libLet_debug.jar')
}
task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/outputs/target/')
    include('classes.jar')
    rename('classes.jar', 'libLet.jar')
}

makeJarDebug.dependsOn(build)
makeJar.dependsOn(makeJarDebug)

dependencies {
    compile files('libs/NetworkAPI.jar')
    compile files('libs/econtrolParserlib.jar')
    compile files('libs/BLIrdaConlib.jar')
    compile 'com.android.support:support-annotations:21.0.2'
}

def getSvnRevision() {
//    ISVNOptions options = SVNWCUtil.createDefaultOptions(true);
//    SVNClientManager clientManager = SVNClientManager.newInstance(options);
//    SVNStatusClient statusClient = clientManager.getStatusClient();
//    SVNStatus status = statusClient.doStatus(projectDir, false);
//    SVNRevision revision = status.getRevision();
    return 1849;
}